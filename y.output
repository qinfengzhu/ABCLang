Terminals which are not used

   ELSEIF


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: def_or_statement
    2                 | translation_unit def_or_statement

    3 def_or_statement: function_def
    4                 | statement

    5 function_def: FUNCTION IDENTIFIER LP parameter_list RP block
    6             | FUNCTION IDENTIFIER LP RP block

    7 argument_list: expression
    8              | argument_list COMMA expression

    9 parameter_list: IDENTIFIER
   10               | parameter_list COMMA IDENTIFIER

   11 block: LC statement_list RC
   12      | LC RC

   13 statement_list: statement
   14               | statement_list statement

   15 statement: statement_expression SEMICOLON
   16          | if_statement
   17          | for_statement
   18          | while_statement
   19          | break_statement
   20          | continue_statement
   21          | return_statement

   22 if_statement: IF expression block
   23             | IF expression block ELSE block
   24             | IF expression block elseif_list
   25             | IF expression block elseif_list ELSE block

   26 elseif_list: elseif
   27            | elseif_list elseif

   28 elseif: ELSE IF expression block

   29 for_statement: FOR expression_opt COMMA expression_opt COMMA expression_opt block

   30 while_statement: WHILE expression block

   31 return_statement: RETURN expression SEMICOLON

   32 break_statement: BREAK SEMICOLON

   33 continue_statement: CONTINUE SEMICOLON

   34 expression_opt: /* empty */
   35               | expression

   36 statement_expression: assign_expression
   37                     | method_call_expression
   38                     | function_call_expression

   39 assign_expression: expression ASSIGN expression

   40 method_call_expression: postfix_expression DOT IDENTIFIER LP argument_list RP
   41                       | postfix_expression DOT IDENTIFIER LP RP

   42 function_call_expression: IDENTIFIER LP argument_list RP
   43                         | IDENTIFIER LP RP

   44 expression: logical_or_expression

   45 logical_or_expression: logical_and_expression
   46                      | logical_or_expression LOGICAL_OR logical_and_expression

   47 logical_and_expression: equality_expression
   48                       | logical_and_expression LOGICAL_AND equality_expression

   49 equality_expression: relational_expression
   50                    | equality_expression EQ relational_expression
   51                    | equality_expression NE relational_expression

   52 relational_expression: add_sub_expression
   53                      | relational_expression GT add_sub_expression
   54                      | relational_expression GE add_sub_expression
   55                      | relational_expression LT add_sub_expression
   56                      | relational_expression LE add_sub_expression

   57 add_sub_expression: mul_div_mod_expression
   58                   | add_sub_expression ADD mul_div_mod_expression
   59                   | add_sub_expression SUB mul_div_mod_expression

   60 mul_div_mod_expression: incr_decr_expression
   61                       | mul_div_mod_expression MUL incr_decr_expression
   62                       | mul_div_mod_expression DIV incr_decr_expression
   63                       | mul_div_mod_expression MOD incr_decr_expression

   64 incr_decr_expression: minus_expression
   65                     | incr_decr_expression INCR
   66                     | incr_decr_expression DECR

   67 minus_expression: postfix_expression
   68                 | SUB postfix_expression

   69 postfix_expression: primary_expression
   70                   | postfix_expression LB expression RB

   71 primary_expression: function_call_expression
   72                   | method_call_expression
   73                   | LP expression RP
   74                   | IDENTIFIER
   75                   | INT_LITERAL
   76                   | DOUBLE_LITERAL
   77                   | STRING_LITERAL
   78                   | TRUE_T
   79                   | FALSE_T
   80                   | NULL_T


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 75
DOUBLE_LITERAL (259) 76
STRING_LITERAL (260) 77
IDENTIFIER (261) 5 6 9 10 40 41 42 43 74
FUNCTION (262) 5 6
IF (263) 22 23 24 25 28
ELSE (264) 23 25 28
ELSEIF (265)
WHILE (266) 30
FOR (267) 29
RETURN (268) 31
BREAK (269) 32
CONTINUE (270) 33
NULL_T (271) 80
INCR (272) 65
DECR (273) 66
LP (274) 5 6 40 41 42 43 73
RP (275) 5 6 40 41 42 43 73
LB (276) 70
RB (277) 70
LC (278) 11 12
RC (279) 11 12
DOT (280) 40 41
SEMICOLON (281) 15 31 32 33
COMMA (282) 8 10 29
ASSIGN (283) 39
LOGICAL_AND (284) 48
LOGICAL_OR (285) 46
EQ (286) 50
NE (287) 51
GT (288) 53
GE (289) 54
LT (290) 55
LE (291) 56
ADD (292) 58
SUB (293) 59 68
MUL (294) 61
DIV (295) 62
MOD (296) 63
TRUE_T (297) 78
FALSE_T (298) 79


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
translation_unit (45)
    on left: 1 2, on right: 0 2
def_or_statement (46)
    on left: 3 4, on right: 1 2
function_def (47)
    on left: 5 6, on right: 3
argument_list (48)
    on left: 7 8, on right: 8 40 42
parameter_list (49)
    on left: 9 10, on right: 5 10
block (50)
    on left: 11 12, on right: 5 6 22 23 24 25 28 29 30
statement_list (51)
    on left: 13 14, on right: 11 14
statement (52)
    on left: 15 16 17 18 19 20 21, on right: 4 13 14
if_statement (53)
    on left: 22 23 24 25, on right: 16
elseif_list (54)
    on left: 26 27, on right: 24 25 27
elseif (55)
    on left: 28, on right: 26 27
for_statement (56)
    on left: 29, on right: 17
while_statement (57)
    on left: 30, on right: 18
return_statement (58)
    on left: 31, on right: 21
break_statement (59)
    on left: 32, on right: 19
continue_statement (60)
    on left: 33, on right: 20
expression_opt (61)
    on left: 34 35, on right: 29
statement_expression (62)
    on left: 36 37 38, on right: 15
assign_expression (63)
    on left: 39, on right: 36
method_call_expression (64)
    on left: 40 41, on right: 37 72
function_call_expression (65)
    on left: 42 43, on right: 38 71
expression (66)
    on left: 44, on right: 7 8 22 23 24 25 28 30 31 35 39 70 73
logical_or_expression (67)
    on left: 45 46, on right: 44 46
logical_and_expression (68)
    on left: 47 48, on right: 45 46 48
equality_expression (69)
    on left: 49 50 51, on right: 47 48 50 51
relational_expression (70)
    on left: 52 53 54 55 56, on right: 49 50 51 53 54 55 56
add_sub_expression (71)
    on left: 57 58 59, on right: 52 53 54 55 56 58 59
mul_div_mod_expression (72)
    on left: 60 61 62 63, on right: 57 58 59 61 62 63
incr_decr_expression (73)
    on left: 64 65 66, on right: 60 61 62 63 65 66
minus_expression (74)
    on left: 67 68, on right: 64
postfix_expression (75)
    on left: 69 70, on right: 40 41 67 68 70
primary_expression (76)
    on left: 71 72 73 74 75 76 77 78 79 80, on right: 69


state 0

    0 $accept: . translation_unit $end

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    translation_unit          go to state 17
    def_or_statement          go to state 18
    function_def              go to state 19
    statement                 go to state 20
    if_statement              go to state 21
    for_statement             go to state 22
    while_statement           go to state 23
    return_statement          go to state 24
    break_statement           go to state 25
    continue_statement        go to state 26
    statement_expression      go to state 27
    assign_expression         go to state 28
    method_call_expression    go to state 29
    function_call_expression  go to state 30
    expression                go to state 31
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 1

   75 primary_expression: INT_LITERAL .

    $default  reduce using rule 75 (primary_expression)


state 2

   76 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 76 (primary_expression)


state 3

   77 primary_expression: STRING_LITERAL .

    $default  reduce using rule 77 (primary_expression)


state 4

   42 function_call_expression: IDENTIFIER . LP argument_list RP
   43                         | IDENTIFIER . LP RP
   74 primary_expression: IDENTIFIER .

    LP  shift, and go to state 42

    $default  reduce using rule 74 (primary_expression)


state 5

    5 function_def: FUNCTION . IDENTIFIER LP parameter_list RP block
    6             | FUNCTION . IDENTIFIER LP RP block

    IDENTIFIER  shift, and go to state 43


state 6

   22 if_statement: IF . expression block
   23             | IF . expression block ELSE block
   24             | IF . expression block elseif_list
   25             | IF . expression block elseif_list ELSE block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 46
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 7

   30 while_statement: WHILE . expression block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 47
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 8

   29 for_statement: FOR . expression_opt COMMA expression_opt COMMA expression_opt block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    $default  reduce using rule 34 (expression_opt)

    expression_opt            go to state 48
    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 49
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 9

   31 return_statement: RETURN . expression SEMICOLON

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 50
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 10

   32 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 51


state 11

   33 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 52


state 12

   80 primary_expression: NULL_T .

    $default  reduce using rule 80 (primary_expression)


state 13

   73 primary_expression: LP . expression RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 53
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 14

   68 minus_expression: SUB . postfix_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    postfix_expression        go to state 54
    primary_expression        go to state 41


state 15

   78 primary_expression: TRUE_T .

    $default  reduce using rule 78 (primary_expression)


state 16

   79 primary_expression: FALSE_T .

    $default  reduce using rule 79 (primary_expression)


state 17

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . def_or_statement

    $end            shift, and go to state 55
    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    def_or_statement          go to state 56
    function_def              go to state 19
    statement                 go to state 20
    if_statement              go to state 21
    for_statement             go to state 22
    while_statement           go to state 23
    return_statement          go to state 24
    break_statement           go to state 25
    continue_statement        go to state 26
    statement_expression      go to state 27
    assign_expression         go to state 28
    method_call_expression    go to state 29
    function_call_expression  go to state 30
    expression                go to state 31
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 18

    1 translation_unit: def_or_statement .

    $default  reduce using rule 1 (translation_unit)


state 19

    3 def_or_statement: function_def .

    $default  reduce using rule 3 (def_or_statement)


state 20

    4 def_or_statement: statement .

    $default  reduce using rule 4 (def_or_statement)


state 21

   16 statement: if_statement .

    $default  reduce using rule 16 (statement)


state 22

   17 statement: for_statement .

    $default  reduce using rule 17 (statement)


state 23

   18 statement: while_statement .

    $default  reduce using rule 18 (statement)


state 24

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


state 25

   19 statement: break_statement .

    $default  reduce using rule 19 (statement)


state 26

   20 statement: continue_statement .

    $default  reduce using rule 20 (statement)


state 27

   15 statement: statement_expression . SEMICOLON

    SEMICOLON  shift, and go to state 57


state 28

   36 statement_expression: assign_expression .

    $default  reduce using rule 36 (statement_expression)


state 29

   37 statement_expression: method_call_expression .
   72 primary_expression: method_call_expression .

    SEMICOLON  reduce using rule 37 (statement_expression)
    $default   reduce using rule 72 (primary_expression)


state 30

   38 statement_expression: function_call_expression .
   71 primary_expression: function_call_expression .

    SEMICOLON  reduce using rule 38 (statement_expression)
    $default   reduce using rule 71 (primary_expression)


state 31

   39 assign_expression: expression . ASSIGN expression

    ASSIGN  shift, and go to state 58


state 32

   44 expression: logical_or_expression .
   46 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 59

    $default  reduce using rule 44 (expression)


state 33

   45 logical_or_expression: logical_and_expression .
   48 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 60

    $default  reduce using rule 45 (logical_or_expression)


state 34

   47 logical_and_expression: equality_expression .
   50 equality_expression: equality_expression . EQ relational_expression
   51                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 61
    NE  shift, and go to state 62

    $default  reduce using rule 47 (logical_and_expression)


state 35

   49 equality_expression: relational_expression .
   53 relational_expression: relational_expression . GT add_sub_expression
   54                      | relational_expression . GE add_sub_expression
   55                      | relational_expression . LT add_sub_expression
   56                      | relational_expression . LE add_sub_expression

    GT  shift, and go to state 63
    GE  shift, and go to state 64
    LT  shift, and go to state 65
    LE  shift, and go to state 66

    $default  reduce using rule 49 (equality_expression)


state 36

   52 relational_expression: add_sub_expression .
   58 add_sub_expression: add_sub_expression . ADD mul_div_mod_expression
   59                   | add_sub_expression . SUB mul_div_mod_expression

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68

    $default  reduce using rule 52 (relational_expression)


state 37

   57 add_sub_expression: mul_div_mod_expression .
   61 mul_div_mod_expression: mul_div_mod_expression . MUL incr_decr_expression
   62                       | mul_div_mod_expression . DIV incr_decr_expression
   63                       | mul_div_mod_expression . MOD incr_decr_expression

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 57 (add_sub_expression)


state 38

   60 mul_div_mod_expression: incr_decr_expression .
   65 incr_decr_expression: incr_decr_expression . INCR
   66                     | incr_decr_expression . DECR

    INCR  shift, and go to state 72
    DECR  shift, and go to state 73

    $default  reduce using rule 60 (mul_div_mod_expression)


state 39

   64 incr_decr_expression: minus_expression .

    $default  reduce using rule 64 (incr_decr_expression)


state 40

   40 method_call_expression: postfix_expression . DOT IDENTIFIER LP argument_list RP
   41                       | postfix_expression . DOT IDENTIFIER LP RP
   67 minus_expression: postfix_expression .
   70 postfix_expression: postfix_expression . LB expression RB

    LB   shift, and go to state 74
    DOT  shift, and go to state 75

    $default  reduce using rule 67 (minus_expression)


state 41

   69 postfix_expression: primary_expression .

    $default  reduce using rule 69 (postfix_expression)


state 42

   42 function_call_expression: IDENTIFIER LP . argument_list RP
   43                         | IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RP              shift, and go to state 76
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    argument_list             go to state 77
    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 78
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 43

    5 function_def: FUNCTION IDENTIFIER . LP parameter_list RP block
    6             | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 79


state 44

   72 primary_expression: method_call_expression .

    $default  reduce using rule 72 (primary_expression)


state 45

   71 primary_expression: function_call_expression .

    $default  reduce using rule 71 (primary_expression)


state 46

   22 if_statement: IF expression . block
   23             | IF expression . block ELSE block
   24             | IF expression . block elseif_list
   25             | IF expression . block elseif_list ELSE block

    LC  shift, and go to state 80

    block  go to state 81


state 47

   30 while_statement: WHILE expression . block

    LC  shift, and go to state 80

    block  go to state 82


state 48

   29 for_statement: FOR expression_opt . COMMA expression_opt COMMA expression_opt block

    COMMA  shift, and go to state 83


state 49

   35 expression_opt: expression .

    $default  reduce using rule 35 (expression_opt)


state 50

   31 return_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 84


state 51

   32 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 32 (break_statement)


state 52

   33 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 33 (continue_statement)


state 53

   73 primary_expression: LP expression . RP

    RP  shift, and go to state 85


state 54

   40 method_call_expression: postfix_expression . DOT IDENTIFIER LP argument_list RP
   41                       | postfix_expression . DOT IDENTIFIER LP RP
   68 minus_expression: SUB postfix_expression .
   70 postfix_expression: postfix_expression . LB expression RB

    LB   shift, and go to state 74
    DOT  shift, and go to state 75

    $default  reduce using rule 68 (minus_expression)


state 55

    0 $accept: translation_unit $end .

    $default  accept


state 56

    2 translation_unit: translation_unit def_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 57

   15 statement: statement_expression SEMICOLON .

    $default  reduce using rule 15 (statement)


state 58

   39 assign_expression: expression ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 86
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 59

   46 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    logical_and_expression    go to state 87
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 60

   48 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    equality_expression       go to state 88
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 61

   50 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    relational_expression     go to state 89
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 62

   51 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    relational_expression     go to state 90
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 63

   53 relational_expression: relational_expression GT . add_sub_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    add_sub_expression        go to state 91
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 64

   54 relational_expression: relational_expression GE . add_sub_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    add_sub_expression        go to state 92
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 65

   55 relational_expression: relational_expression LT . add_sub_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    add_sub_expression        go to state 93
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 66

   56 relational_expression: relational_expression LE . add_sub_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    add_sub_expression        go to state 94
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 67

   58 add_sub_expression: add_sub_expression ADD . mul_div_mod_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    mul_div_mod_expression    go to state 95
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 68

   59 add_sub_expression: add_sub_expression SUB . mul_div_mod_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    mul_div_mod_expression    go to state 96
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 69

   61 mul_div_mod_expression: mul_div_mod_expression MUL . incr_decr_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    incr_decr_expression      go to state 97
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 70

   62 mul_div_mod_expression: mul_div_mod_expression DIV . incr_decr_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    incr_decr_expression      go to state 98
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 71

   63 mul_div_mod_expression: mul_div_mod_expression MOD . incr_decr_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    incr_decr_expression      go to state 99
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 72

   65 incr_decr_expression: incr_decr_expression INCR .

    $default  reduce using rule 65 (incr_decr_expression)


state 73

   66 incr_decr_expression: incr_decr_expression DECR .

    $default  reduce using rule 66 (incr_decr_expression)


state 74

   70 postfix_expression: postfix_expression LB . expression RB

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 100
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 75

   40 method_call_expression: postfix_expression DOT . IDENTIFIER LP argument_list RP
   41                       | postfix_expression DOT . IDENTIFIER LP RP

    IDENTIFIER  shift, and go to state 101


state 76

   43 function_call_expression: IDENTIFIER LP RP .

    $default  reduce using rule 43 (function_call_expression)


state 77

    8 argument_list: argument_list . COMMA expression
   42 function_call_expression: IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 102
    COMMA  shift, and go to state 103


state 78

    7 argument_list: expression .

    $default  reduce using rule 7 (argument_list)


state 79

    5 function_def: FUNCTION IDENTIFIER LP . parameter_list RP block
    6             | FUNCTION IDENTIFIER LP . RP block

    IDENTIFIER  shift, and go to state 104
    RP          shift, and go to state 105

    parameter_list  go to state 106


state 80

   11 block: LC . statement_list RC
   12      | LC . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RC              shift, and go to state 107
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    statement_list            go to state 108
    statement                 go to state 109
    if_statement              go to state 21
    for_statement             go to state 22
    while_statement           go to state 23
    return_statement          go to state 24
    break_statement           go to state 25
    continue_statement        go to state 26
    statement_expression      go to state 27
    assign_expression         go to state 28
    method_call_expression    go to state 29
    function_call_expression  go to state 30
    expression                go to state 31
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 81

   22 if_statement: IF expression block .
   23             | IF expression block . ELSE block
   24             | IF expression block . elseif_list
   25             | IF expression block . elseif_list ELSE block

    ELSE  shift, and go to state 110

    $default  reduce using rule 22 (if_statement)

    elseif_list  go to state 111
    elseif       go to state 112


state 82

   30 while_statement: WHILE expression block .

    $default  reduce using rule 30 (while_statement)


state 83

   29 for_statement: FOR expression_opt COMMA . expression_opt COMMA expression_opt block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    $default  reduce using rule 34 (expression_opt)

    expression_opt            go to state 113
    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 49
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 84

   31 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 31 (return_statement)


state 85

   73 primary_expression: LP expression RP .

    $default  reduce using rule 73 (primary_expression)


state 86

   39 assign_expression: expression ASSIGN expression .

    $default  reduce using rule 39 (assign_expression)


state 87

   46 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   48 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 60

    $default  reduce using rule 46 (logical_or_expression)


state 88

   48 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   50 equality_expression: equality_expression . EQ relational_expression
   51                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 61
    NE  shift, and go to state 62

    $default  reduce using rule 48 (logical_and_expression)


state 89

   50 equality_expression: equality_expression EQ relational_expression .
   53 relational_expression: relational_expression . GT add_sub_expression
   54                      | relational_expression . GE add_sub_expression
   55                      | relational_expression . LT add_sub_expression
   56                      | relational_expression . LE add_sub_expression

    GT  shift, and go to state 63
    GE  shift, and go to state 64
    LT  shift, and go to state 65
    LE  shift, and go to state 66

    $default  reduce using rule 50 (equality_expression)


state 90

   51 equality_expression: equality_expression NE relational_expression .
   53 relational_expression: relational_expression . GT add_sub_expression
   54                      | relational_expression . GE add_sub_expression
   55                      | relational_expression . LT add_sub_expression
   56                      | relational_expression . LE add_sub_expression

    GT  shift, and go to state 63
    GE  shift, and go to state 64
    LT  shift, and go to state 65
    LE  shift, and go to state 66

    $default  reduce using rule 51 (equality_expression)


state 91

   53 relational_expression: relational_expression GT add_sub_expression .
   58 add_sub_expression: add_sub_expression . ADD mul_div_mod_expression
   59                   | add_sub_expression . SUB mul_div_mod_expression

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68

    $default  reduce using rule 53 (relational_expression)


state 92

   54 relational_expression: relational_expression GE add_sub_expression .
   58 add_sub_expression: add_sub_expression . ADD mul_div_mod_expression
   59                   | add_sub_expression . SUB mul_div_mod_expression

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68

    $default  reduce using rule 54 (relational_expression)


state 93

   55 relational_expression: relational_expression LT add_sub_expression .
   58 add_sub_expression: add_sub_expression . ADD mul_div_mod_expression
   59                   | add_sub_expression . SUB mul_div_mod_expression

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68

    $default  reduce using rule 55 (relational_expression)


state 94

   56 relational_expression: relational_expression LE add_sub_expression .
   58 add_sub_expression: add_sub_expression . ADD mul_div_mod_expression
   59                   | add_sub_expression . SUB mul_div_mod_expression

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68

    $default  reduce using rule 56 (relational_expression)


state 95

   58 add_sub_expression: add_sub_expression ADD mul_div_mod_expression .
   61 mul_div_mod_expression: mul_div_mod_expression . MUL incr_decr_expression
   62                       | mul_div_mod_expression . DIV incr_decr_expression
   63                       | mul_div_mod_expression . MOD incr_decr_expression

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 58 (add_sub_expression)


state 96

   59 add_sub_expression: add_sub_expression SUB mul_div_mod_expression .
   61 mul_div_mod_expression: mul_div_mod_expression . MUL incr_decr_expression
   62                       | mul_div_mod_expression . DIV incr_decr_expression
   63                       | mul_div_mod_expression . MOD incr_decr_expression

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 59 (add_sub_expression)


state 97

   61 mul_div_mod_expression: mul_div_mod_expression MUL incr_decr_expression .
   65 incr_decr_expression: incr_decr_expression . INCR
   66                     | incr_decr_expression . DECR

    INCR  shift, and go to state 72
    DECR  shift, and go to state 73

    $default  reduce using rule 61 (mul_div_mod_expression)


state 98

   62 mul_div_mod_expression: mul_div_mod_expression DIV incr_decr_expression .
   65 incr_decr_expression: incr_decr_expression . INCR
   66                     | incr_decr_expression . DECR

    INCR  shift, and go to state 72
    DECR  shift, and go to state 73

    $default  reduce using rule 62 (mul_div_mod_expression)


state 99

   63 mul_div_mod_expression: mul_div_mod_expression MOD incr_decr_expression .
   65 incr_decr_expression: incr_decr_expression . INCR
   66                     | incr_decr_expression . DECR

    INCR  shift, and go to state 72
    DECR  shift, and go to state 73

    $default  reduce using rule 63 (mul_div_mod_expression)


state 100

   70 postfix_expression: postfix_expression LB expression . RB

    RB  shift, and go to state 114


state 101

   40 method_call_expression: postfix_expression DOT IDENTIFIER . LP argument_list RP
   41                       | postfix_expression DOT IDENTIFIER . LP RP

    LP  shift, and go to state 115


state 102

   42 function_call_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 42 (function_call_expression)


state 103

    8 argument_list: argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 116
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 104

    9 parameter_list: IDENTIFIER .

    $default  reduce using rule 9 (parameter_list)


state 105

    6 function_def: FUNCTION IDENTIFIER LP RP . block

    LC  shift, and go to state 80

    block  go to state 117


state 106

    5 function_def: FUNCTION IDENTIFIER LP parameter_list . RP block
   10 parameter_list: parameter_list . COMMA IDENTIFIER

    RP     shift, and go to state 118
    COMMA  shift, and go to state 119


state 107

   12 block: LC RC .

    $default  reduce using rule 12 (block)


state 108

   11 block: LC statement_list . RC
   14 statement_list: statement_list . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RC              shift, and go to state 120
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    statement                 go to state 121
    if_statement              go to state 21
    for_statement             go to state 22
    while_statement           go to state 23
    return_statement          go to state 24
    break_statement           go to state 25
    continue_statement        go to state 26
    statement_expression      go to state 27
    assign_expression         go to state 28
    method_call_expression    go to state 29
    function_call_expression  go to state 30
    expression                go to state 31
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 109

   13 statement_list: statement .

    $default  reduce using rule 13 (statement_list)


state 110

   23 if_statement: IF expression block ELSE . block
   28 elseif: ELSE . IF expression block

    IF  shift, and go to state 122
    LC  shift, and go to state 80

    block  go to state 123


state 111

   24 if_statement: IF expression block elseif_list .
   25             | IF expression block elseif_list . ELSE block
   27 elseif_list: elseif_list . elseif

    ELSE  shift, and go to state 124

    $default  reduce using rule 24 (if_statement)

    elseif  go to state 125


state 112

   26 elseif_list: elseif .

    $default  reduce using rule 26 (elseif_list)


state 113

   29 for_statement: FOR expression_opt COMMA expression_opt . COMMA expression_opt block

    COMMA  shift, and go to state 126


state 114

   70 postfix_expression: postfix_expression LB expression RB .

    $default  reduce using rule 70 (postfix_expression)


state 115

   40 method_call_expression: postfix_expression DOT IDENTIFIER LP . argument_list RP
   41                       | postfix_expression DOT IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RP              shift, and go to state 127
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    argument_list             go to state 128
    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 78
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 116

    8 argument_list: argument_list COMMA expression .

    $default  reduce using rule 8 (argument_list)


state 117

    6 function_def: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 6 (function_def)


state 118

    5 function_def: FUNCTION IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 80

    block  go to state 129


state 119

   10 parameter_list: parameter_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 130


state 120

   11 block: LC statement_list RC .

    $default  reduce using rule 11 (block)


state 121

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


state 122

   28 elseif: ELSE IF . expression block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 131
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 123

   23 if_statement: IF expression block ELSE block .

    $default  reduce using rule 23 (if_statement)


state 124

   25 if_statement: IF expression block elseif_list ELSE . block
   28 elseif: ELSE . IF expression block

    IF  shift, and go to state 122
    LC  shift, and go to state 80

    block  go to state 132


state 125

   27 elseif_list: elseif_list elseif .

    $default  reduce using rule 27 (elseif_list)


state 126

   29 for_statement: FOR expression_opt COMMA expression_opt COMMA . expression_opt block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16

    $default  reduce using rule 34 (expression_opt)

    expression_opt            go to state 133
    method_call_expression    go to state 44
    function_call_expression  go to state 45
    expression                go to state 49
    logical_or_expression     go to state 32
    logical_and_expression    go to state 33
    equality_expression       go to state 34
    relational_expression     go to state 35
    add_sub_expression        go to state 36
    mul_div_mod_expression    go to state 37
    incr_decr_expression      go to state 38
    minus_expression          go to state 39
    postfix_expression        go to state 40
    primary_expression        go to state 41


state 127

   41 method_call_expression: postfix_expression DOT IDENTIFIER LP RP .

    $default  reduce using rule 41 (method_call_expression)


state 128

    8 argument_list: argument_list . COMMA expression
   40 method_call_expression: postfix_expression DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 134
    COMMA  shift, and go to state 103


state 129

    5 function_def: FUNCTION IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 5 (function_def)


state 130

   10 parameter_list: parameter_list COMMA IDENTIFIER .

    $default  reduce using rule 10 (parameter_list)


state 131

   28 elseif: ELSE IF expression . block

    LC  shift, and go to state 80

    block  go to state 135


state 132

   25 if_statement: IF expression block elseif_list ELSE block .

    $default  reduce using rule 25 (if_statement)


state 133

   29 for_statement: FOR expression_opt COMMA expression_opt COMMA expression_opt . block

    LC  shift, and go to state 80

    block  go to state 136


state 134

   40 method_call_expression: postfix_expression DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 40 (method_call_expression)


state 135

   28 elseif: ELSE IF expression block .

    $default  reduce using rule 28 (elseif)


state 136

   29 for_statement: FOR expression_opt COMMA expression_opt COMMA expression_opt block .

    $default  reduce using rule 29 (for_statement)
